version: '{build}'
clone_depth: 3
environment:
  JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
  compile_options: -B -P ${job_name}
  deploy_options: -B -pl !cadical4j -P ${job_name}  
  matrix:
    - job_name: linux-x86-64
      job_group: jnalib
      appveyor_build_worker_image: Ubuntu  
      DEPLOY: 1
    - job_name: darwin
      job_group: jnalib
      appveyor_build_worker_image: macos
      DEPLOY: 1    
    - job_name: java8-linux-x86-64-deploy
      job_group: java
      job_depends_on: jnalib
      appveyor_build_worker_image: Ubuntu
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64/
      DEPLOY: 1
    - job_name: java11-linux-x86-64
      job_group: java
      job_depends_on: jnalib
      appveyor_build_worker_image: Ubuntu2004
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64/
    - job_name: java15-linux-x86-64
      job_group: java
      job_depends_on: jnalib
      appveyor_build_worker_image: Ubuntu2004
      JAVA_HOME: /usr/lib/jvm/java-15-openjdk-amd64/
matrix:
  fast_finish: true
install:
  - bash -c "mkdir -p $HOME/.m2"
  - bash -c "cp -f .settings.xml $HOME/.m2/settings.xml"  
build: Script
build_script:
  - bash -c "mvn install -DskipTests=true -U ${compile_options}"
test_script:
  - bash -c "mvn test -Dassembly.skipAssembly=true ${compile_options}"
deploy_script:
  - bash -c "if [ ${DEPLOY} ]; then mvn source:jar deploy -DskipTests=true ${deploy_options}; fi" 
cache:
  - $HOME/.m2/    
for:
  -
    matrix:
      only:
        - job_name: darwin
    environment:    
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      JAVA_HOME:
    init:
      - brew install maven wget
      - sudo mv /Library/Developer/CommandLineTools/SDKs /tmp/
  -
    matrix:
      only:
        - job_group: java
    environment:
      compile_options: -B -pl !cadical -P multi-platform
      deploy_options: ${compile_options}